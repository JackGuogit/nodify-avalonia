<Window
    x:Class="Nodify.StateMachine.MainWindow"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviours="clr-namespace:Nodify.Shared.Behaviours;assembly=Nodify.Shared"
    xmlns:compatibility="clr-namespace:Nodify.Compatibility;assembly=Nodify"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Nodify.StateMachine"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:nodify="https://miroiu.github.io/nodify"
    xmlns:shared="clr-namespace:Nodify;assembly=Nodify.Shared"
    xmlns:stateMachine="clr-namespace:Nodify.StateMachine;assembly=Nodify.Shared"
    Title="State Machine Editor"
    Width="930"
    Height="500"
    CanResize="True"
    mc:Ignorable="d">
    <Window.DataContext>
        <local:StateMachineViewModel />
    </Window.DataContext>

    <Window.Resources>
        <shared:BindingProxy x:Key="EditorProxy" DataContext="{Binding}" />
        <shared:BindingProxy x:Key="BlackboardProxy" DataContext="{Binding Blackboard}" />
        <local:ConnectorOffsetConverter x:Key="ConnectorOffsetConverter" />
    </Window.Resources>

    <Window.Styles>
        <Style Selector="MenuItem">
            <Setter Property="Icon">
                <Template>
                    <Rectangle
                        Width="16"
                        Height="16"
                        Fill="{Binding $parent[MenuItem].Tag}" />
                </Template>
            </Setter>
        </Style>
    </Window.Styles>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <ScrollViewer
            x:Name="PART_ScrollViewer"
            Grid.Column="1"
            HorizontalScrollBarVisibility="Auto"
            VerticalScrollBarVisibility="Auto">
            <nodify:NodifyEditor
                x:Name="Editor"
                Grid.Column="1"
                ConnectionCompletedCommand="{Binding CreateTransitionCommand}"
                Connections="{Binding Transitions}"
                DisconnectConnectorCommand="{Binding DisconnectStateCommand}"
                ItemsSource="{Binding States}"
                PendingConnection="{Binding PendingTransition}"
                RemoveConnectionCommand="{Binding DeleteTransitionCommand}"
                SelectedItem="{Binding SelectedState}"
                SelectedItems="{Binding SelectedStates}">
                <nodify:NodifyEditor.PendingConnectionTemplate>
                    <DataTemplate DataType="{x:Type local:TransitionViewModel}">
                        <nodify:PendingConnection
                            EnablePreview="True"
                            Source="{Binding Source, Mode=OneWayToSource}"
                            StrokeDashArray="0"
                            Target="{Binding Target, Mode=OneWayToSource}">
                            <nodify:PendingConnection.Template>
                                <ControlTemplate TargetType="{x:Type nodify:PendingConnection}">
                                    <nodify:LineConnection
                                        Source="{TemplateBinding SourceAnchor}"
                                        SourceOffset="{Binding Source.Size, Converter={StaticResource ConnectorOffsetConverter}, ConverterParameter=5}"
                                        SourceOffsetMode="Edge"
                                        Spacing="0"
                                        StrokeDashArray="{TemplateBinding StrokeDashArray}"
                                        StrokeThickness="{TemplateBinding StrokeThickness}"
                                        Target="{TemplateBinding TargetAnchor}"
                                        TargetOffsetMode="None" />
                                </ControlTemplate>
                            </nodify:PendingConnection.Template>
                        </nodify:PendingConnection>
                    </DataTemplate>
                </nodify:NodifyEditor.PendingConnectionTemplate>

                <nodify:NodifyEditor.ConnectionTemplate>
                    <DataTemplate DataType="{x:Type local:TransitionViewModel}">
                        <nodify:LineConnection
                            Source="{Binding Source.Anchor}"
                            SourceOffset="{Binding Source.Size, Converter={StaticResource ConnectorOffsetConverter}, ConverterParameter=5}"
                            SourceOffsetMode="Edge"
                            Spacing="0"
                            Tag="{Binding}"
                            Target="{Binding Target.Anchor}"
                            TargetOffset="{Binding Target.Size, Converter={StaticResource ConnectorOffsetConverter}, ConverterParameter=5}"
                            TargetOffsetMode="Edge">
                            <nodify:LineConnection.Theme>
                                <ControlTheme BasedOn="{StaticResource {x:Type nodify:LineConnection}}" TargetType="{x:Type nodify:LineConnection}">
                                    <Setter Property="StrokeThickness" Value="3" />
                                    <Setter Property="(Interaction.Behaviors)">
                                        <BehaviorCollectionTemplate>
                                            <BehaviorCollection>
                                                <DataTrigger Property="IsActive" Value="True">
                                                    <PropertySetter Property="Stroke" Value="{DynamicResource ActiveStateBrush}" />
                                                    <PropertySetter Property="StrokeThickness" Value="6" />
                                                </DataTrigger>
                                            </BehaviorCollection>
                                        </BehaviorCollectionTemplate>
                                    </Setter>
                                </ControlTheme>
                            </nodify:LineConnection.Theme>
                            <nodify:LineConnection.ContextMenu>
                                <ContextMenu DataContext="{Binding DataContext, Source={StaticResource EditorProxy}}">
                                    <MenuItem
                                        Command="{Binding DeleteTransitionCommand}"
                                        CommandParameter="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                        Header="_Delete"
                                        Icon="{StaticResource DeleteIcon}" />
                                </ContextMenu>
                            </nodify:LineConnection.ContextMenu>
                        </nodify:LineConnection>
                    </DataTemplate>
                </nodify:NodifyEditor.ConnectionTemplate>

                <nodify:NodifyEditor.ItemTemplate>
                    <DataTemplate DataType="{x:Type local:StateViewModel}">
                        <!--  If IsConnected is false, Anchor won't be updated  -->
                        <nodify:StateNode
                            Anchor="{Binding Anchor, Mode=OneWayToSource}"
                            Content="{Binding}"
                            IsConnected="True">
                            <nodify:StateNode.ContentTemplate>
                                <DataTemplate DataType="{x:Type local:StateViewModel}">
                                    <shared:EditableTextBlock
                                        IsEditable="{Binding IsEditable}"
                                        IsEditing="{Binding IsRenaming}"
                                        MaxLength="30"
                                        Text="{Binding Name}" />
                                </DataTemplate>
                            </nodify:StateNode.ContentTemplate>
                            <nodify:StateNode.Theme>
                                <ControlTheme BasedOn="{StaticResource {x:Type nodify:StateNode}}" TargetType="{x:Type nodify:StateNode}">
                                    <Setter Property="(Interaction.Behaviors)">
                                        <BehaviorCollectionTemplate>
                                            <BehaviorCollection>
                                                <DataTrigger Property="IsEditable" Value="False">
                                                    <PropertySetter Property="BorderBrush" Value="{DynamicResource ReadOnlyStateBrush}" />
                                                </DataTrigger>
                                                <DataTrigger Property="IsActive" Value="True">
                                                    <PropertySetter Property="BorderBrush" Value="{DynamicResource ActiveStateBrush}" />
                                                </DataTrigger>
                                            </BehaviorCollection>
                                        </BehaviorCollectionTemplate>
                                    </Setter>
                                </ControlTheme>
                            </nodify:StateNode.Theme>
                        </nodify:StateNode>
                    </DataTemplate>
                </nodify:NodifyEditor.ItemTemplate>

                <nodify:NodifyEditor.ItemContainerTheme>
                    <ControlTheme BasedOn="{StaticResource {x:Type nodify:ItemContainer}}" TargetType="{x:Type nodify:ItemContainer}">
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Location" Value="{Binding Location}" />
                        <Setter Property="ActualSize" Value="{Binding Size, Mode=OneWayToSource}" />
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu DataContext="{Binding DataContext, Source={StaticResource EditorProxy}}">
                                    <MenuItem
                                        Command="{Binding DeleteSelectionCommand}"
                                        Header="_Delete"
                                        Tag="{StaticResource DeleteIcon}" />
                                    <MenuItem
                                        Command="{Binding DisconnectSelectionCommand}"
                                        Header="Di_sconnect"
                                        Tag="{StaticResource DisconnectIcon}" />
                                    <MenuItem
                                        Command="{Binding RenameStateCommand}"
                                        Header="_Rename"
                                        Tag="{StaticResource RenameIcon}" />
                                    <MenuItem Header="_Alignment" Tag="{StaticResource AlignTopIcon}">
                                        <MenuItem
                                            Command="{x:Static nodify:EditorCommands.Align}"
                                            CommandParameter="Top"
                                            Header="_Top"
                                            Tag="{StaticResource AlignTopIcon}" />
                                        <MenuItem
                                            Command="{x:Static nodify:EditorCommands.Align}"
                                            CommandParameter="Left"
                                            Header="_Left"
                                            Tag="{StaticResource AlignLeftIcon}" />
                                        <MenuItem
                                            Command="{x:Static nodify:EditorCommands.Align}"
                                            CommandParameter="Bottom"
                                            Header="_Bottom"
                                            Tag="{StaticResource AlignBottomIcon}" />
                                        <MenuItem
                                            Command="{x:Static nodify:EditorCommands.Align}"
                                            CommandParameter="Right"
                                            Header="_Right"
                                            Tag="{StaticResource AlignRightIcon}" />
                                        <MenuItem
                                            Command="{x:Static nodify:EditorCommands.Align}"
                                            CommandParameter="Middle"
                                            Header="_Middle"
                                            Tag="{StaticResource AlignMiddleIcon}" />
                                        <MenuItem
                                            Command="{x:Static nodify:EditorCommands.Align}"
                                            CommandParameter="Center"
                                            Header="_Center"
                                            Tag="{StaticResource AlignCenterIcon}" />
                                    </MenuItem>
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                    </ControlTheme>
                </nodify:NodifyEditor.ItemContainerTheme>

                <nodify:NodifyEditor.ContextMenu>
                    <ContextMenu DataContext="{Binding DataContext, Source={StaticResource EditorProxy}}">
                        <MenuItem
                            Command="{Binding AddStateCommand}"
                            CommandParameter="{Binding #Editor.MouseLocation}"
                            Header="_Add State"
                            InputGesture="Shift+A"
                            Tag="{StaticResource AddStateIcon}" />
                        <MenuItem
                            Command="{Binding DeleteSelectionCommand}"
                            Header="_Delete"
                            InputGesture="Delete"
                            Tag="{StaticResource DeleteIcon}" />
                        <Separator Background="{DynamicResource BorderBrush}" />
                        <MenuItem
                            Command="{x:Static nodify:EditorCommands.SelectAll}"
                            Header="_Select All"
                            InputGesture="Ctrl+A"
                            Tag="{StaticResource SelectAllIcon}" />
                    </ContextMenu>
                </nodify:NodifyEditor.ContextMenu>

                <nodify:NodifyEditor.KeyBindings>
                    <KeyBinding Command="{Binding DeleteSelectionCommand}" Gesture="Delete" />
                    <KeyBinding
                        Command="{Binding AddStateCommand}"
                        CommandParameter="{Binding MouseLocation, RelativeSource={RelativeSource AncestorType={x:Type nodify:NodifyEditor}}}"
                        Gesture="Shift+A" />
                </nodify:NodifyEditor.KeyBindings>
            </nodify:NodifyEditor>
        </ScrollViewer>

        <!--  TOOLBAR  -->
        <Border
            Grid.Column="1"
            Margin="10,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Background="{DynamicResource PanelBackgroundBrush}"
            BorderThickness="0,0,0,1"
            CornerRadius="2">
            <StackPanel Orientation="Horizontal">
                <Button Command="{Binding PauseCommand}">
                    <Button.Theme>
                        <ControlTheme BasedOn="{StaticResource IconButton}" TargetType="{x:Type Button}">
                            <Setter Property="Content" Value="{StaticResource PauseIcon}" />
                            <Setter Property="(ToolTip.Tip)" Value="Pause" />
                            <Setter Property="(Interaction.Behaviors)">
                                <BehaviorCollectionTemplate>
                                    <BehaviorCollection>
                                        <DataTrigger Property="Runner.State" Value="Stopped">
                                            <PropertySetter Property="IsVisible" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Property="Runner.State" Value="Paused">
                                            <PropertySetter Property="Content" Value="{StaticResource UnpauseIcon}" />
                                            <PropertySetter Property="(ToolTip.Tip)" Value="Continue" />
                                        </DataTrigger>
                                    </BehaviorCollection>
                                </BehaviorCollectionTemplate>
                            </Setter>
                        </ControlTheme>
                    </Button.Theme>
                </Button>

                <Button Command="{Binding RunCommand}" Theme="{StaticResource IconButton}">
                    <StackPanel Orientation="Horizontal">
                        <ContentControl Margin="0,0,4,0">
                            <ContentControl.Theme>
                                <ControlTheme TargetType="{x:Type ContentControl}">
                                    <Setter Property="Content" Value="{StaticResource StopIcon}" />
                                    <Setter Property="(ToolTip.Tip)" Value="Stop" />
                                    <Setter Property="(Interaction.Behaviors)">
                                        <BehaviorCollectionTemplate>
                                            <BehaviorCollection>
                                                <DataTrigger Property="Runner.State" Value="Stopped">
                                                    <PropertySetter Property="Content" Value="{StaticResource RunIcon}" />
                                                    <PropertySetter Property="(ToolTip.Tip)" Value="Run" />
                                                </DataTrigger>
                                            </BehaviorCollection>
                                        </BehaviorCollectionTemplate>
                                    </Setter>
                                </ControlTheme>
                            </ContentControl.Theme>
                        </ContentControl>
                        <TextBlock Text="{Binding Name}" />
                    </StackPanel>
                </Button>

                <Separator Width="1" Height="20" />

                <WpfBtn
                    Command="{x:Static nodify:EditorCommands.ZoomIn}"
                    CommandTarget="{Binding ElementName=Editor}"
                    Content="{StaticResource ZoomInIcon}"
                    Theme="{StaticResource IconButton}"
                    ToolTip.Tip="Zoom In" />

                <WpfBtn
                    Command="{x:Static nodify:EditorCommands.ZoomOut}"
                    CommandTarget="{Binding ElementName=Editor}"
                    Content="{StaticResource ZoomOutIcon}"
                    Theme="{StaticResource IconButton}"
                    ToolTip.Tip="Zoom Out" />

                <Button
                    Command="{Binding Source={x:Static shared:ThemeManager.SetNextThemeCommand}}"
                    Content="{StaticResource ThemeIcon}"
                    Theme="{StaticResource IconButton}"
                    ToolTip.Tip="Change theme" />
            </StackPanel>
        </Border>

        <!--  Settings  -->
        <Expander
            Padding="0,1,4,3"
            HorizontalAlignment="Left"
            HorizontalContentAlignment="Left"
            VerticalContentAlignment="Center"
            Background="{DynamicResource PanelBackgroundBrush}"
            ExpandDirection="Left"
            IsExpanded="True">
            <Expander.Theme>
                <ControlTheme BasedOn="{StaticResource {x:Type Expander}}" TargetType="{x:Type Expander}">
                    <Setter Property="Tag" Value="{StaticResource ExpandRightIcon}" />
                    <Setter Property="(Interaction.Behaviors)">
                        <BehaviorCollectionTemplate>
                            <BehaviorCollection>
                                <DataTrigger
                                    UseDataContext="False"
                                    Property="IsExpanded"
                                    Value="True">
                                    <PropertySetter Property="Tag" Value="{StaticResource ExpandLeftIcon}" />
                                </DataTrigger>
                            </BehaviorCollection>
                        </BehaviorCollectionTemplate>
                    </Setter>
                </ControlTheme>
            </Expander.Theme>

            <Border
                Width="350"
                Padding="10"
                HorizontalAlignment="Stretch"
                BorderBrush="{DynamicResource BackgroundBrush}"
                BorderThickness="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="2*" />
                    </Grid.RowDefinitions>

                    <!--  TRANSITIONS  -->
                    <ScrollViewer
                        Grid.Row="1"
                        IsVisible="{Binding SelectedState, Converter={shared:BooleanToVisibilityConverter Negate=True}}"
                        VerticalScrollBarVisibility="Auto">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <TextBlock
                                FontSize="16"
                                FontWeight="Bold"
                                Foreground="{DynamicResource ForegroundBrush}"
                                Text="Transitions" />

                            <Separator
                                Grid.Row="1"
                                Height="2"
                                Margin="0,2,0,5" />

                            <ItemsControl Grid.Row="2" ItemsSource="{Binding Transitions}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type local:TransitionViewModel}">
                                        <Expander
                                            Padding="0,5,0,0"
                                            BorderBrush="{DynamicResource BackgroundBrush}"
                                            BorderThickness="0,0,0,1"
                                            IsExpanded="True">
                                            <Expander.Theme>
                                                <ControlTheme BasedOn="{StaticResource {x:Type Expander}}" TargetType="{x:Type Expander}">
                                                    <Setter Property="Tag" Value="{StaticResource ExpandRightIcon}" />
                                                    <Setter Property="(Interaction.Behaviors)">
                                                        <BehaviorCollectionTemplate>
                                                            <BehaviorCollection>
                                                                <DataTrigger
                                                                    UseDataContext="False"
                                                                    Property="IsExpanded"
                                                                    Value="True">
                                                                    <PropertySetter Property="Tag" Value="{StaticResource ExpandDownIcon}" />
                                                                </DataTrigger>
                                                            </BehaviorCollection>
                                                        </BehaviorCollectionTemplate>
                                                    </Setter>
                                                </ControlTheme>
                                            </Expander.Theme>
                                            <Expander.Header>
                                                <TextBlock>
                                                    <TextBlock.Theme>
                                                        <ControlTheme TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                                                            <Setter Property="(Interaction.Behaviors)">
                                                                <BehaviorCollectionTemplate>
                                                                    <BehaviorCollection>
                                                                        <DataTrigger Property="IsActive" Value="True">
                                                                            <PropertySetter Property="Foreground" Value="{DynamicResource ActiveStateBrush}" />
                                                                        </DataTrigger>
                                                                    </BehaviorCollection>
                                                                </BehaviorCollectionTemplate>
                                                            </Setter>
                                                        </ControlTheme>
                                                    </TextBlock.Theme>
                                                    <Run Text="{Binding Source.Name, Mode=OneWay}" />
                                                    <Run Text="🠚" />
                                                    <Run Text="{Binding Target.Name, Mode=OneWay}" />
                                                </TextBlock>
                                            </Expander.Header>

                                            <Border HorizontalAlignment="Stretch">
                                                <Grid IsSharedSizeScope="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" SharedSizeGroup="ConditionName" />
                                                        <ColumnDefinition />
                                                    </Grid.ColumnDefinitions>

                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>

                                                    <!--  CONDITION  -->
                                                    <TextBlock
                                                        Margin="0,0,10,0"
                                                        VerticalAlignment="Center"
                                                        Text="Condition" />

                                                    <ComboBox
                                                        Grid.Column="1"
                                                        DisplayMemberBinding="{Binding Name}"
                                                        ItemsSource="{Binding DataContext.Blackboard.Conditions, Source={StaticResource EditorProxy}}"
                                                        SelectedItem="{Binding ConditionReference}" />

                                                    <!--  INPUT  -->
                                                    <ItemsControl
                                                        Grid.Row="1"
                                                        Grid.ColumnSpan="2"
                                                        Padding="0,5,0,0"
                                                        ItemsSource="{Binding Condition.Input}">
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate DataType="{x:Type local:BlackboardKeyViewModel}">
                                                                <local:BlackboardKeyEditorView Margin="0,0,0,2">
                                                                    <local:BlackboardKeyEditorView.DataContext>
                                                                        <MultiBinding Converter="{local:BlackboardKeyEditorConverter CanChangeInputType=True}">
                                                                            <Binding Path="DataContext.Keys" Source="{StaticResource BlackboardProxy}" />
                                                                            <Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}" />
                                                                        </MultiBinding>
                                                                    </local:BlackboardKeyEditorView.DataContext>
                                                                </local:BlackboardKeyEditorView>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>

                                                    <Grid Grid.Row="2" Grid.ColumnSpan="2">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>

                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock VerticalAlignment="Center" Text="From: " />
                                                            <WpfBtn
                                                                Command="{x:Static nodify:EditorCommands.BringIntoView}"
                                                                CommandParameter="{Binding Source.Location}"
                                                                CommandTarget="{Binding ElementName=Editor}"
                                                                Foreground="DodgerBlue"
                                                                Theme="{StaticResource IconButton}">
                                                                <TextBlock Text="{Binding Source.Name}" TextDecorations="Underline" />
                                                            </WpfBtn>
                                                        </StackPanel>

                                                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                                                            <TextBlock VerticalAlignment="Center" Text="To: " />
                                                            <WpfBtn
                                                                Command="{x:Static nodify:EditorCommands.BringIntoView}"
                                                                CommandParameter="{Binding Target.Location}"
                                                                CommandTarget="{Binding ElementName=Editor}"
                                                                Foreground="DodgerBlue"
                                                                Theme="{StaticResource IconButton}">
                                                                <TextBlock Text="{Binding Target.Name}" TextDecorations="Underline" />
                                                            </WpfBtn>
                                                        </StackPanel>
                                                    </Grid>
                                                </Grid>
                                            </Border>
                                        </Expander>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </ScrollViewer>

                    <!--  STATES  -->
                    <Grid Grid.Row="1" IsVisible="{Binding SelectedState, Converter={x:Static ObjectConverters.IsNotNull}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <!--  STATE NAME  -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <shared:EditableTextBlock
                                FontSize="16"
                                FontWeight="Bold"
                                Foreground="{DynamicResource ForegroundBrush}"
                                IsEditable="{Binding SelectedState.IsEditable}"
                                IsEditing="{Binding IsChecked, ElementName=EditStateName}"
                                MaxLength="20"
                                Text="{Binding SelectedState.Name}" />
                            <CheckBox
                                x:Name="EditStateName"
                                Grid.Column="1"
                                Content="{StaticResource EditIcon}"
                                IsVisible="{Binding SelectedState.IsEditable}"
                                Theme="{StaticResource IconCheckBox}" />
                        </Grid>

                        <Separator
                            Grid.Row="1"
                            Height="2"
                            Margin="0,2,0,10" />

                        <ScrollViewer
                            Grid.Row="2"
                            IsVisible="{Binding SelectedState.Action}"
                            VerticalScrollBarVisibility="Auto">
                            <Grid IsSharedSizeScope="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <!--  ACTION  -->
                                <TextBlock
                                    Margin="0,0,10,0"
                                    VerticalAlignment="Center"
                                    Text="Action" />
                                <ComboBox
                                    Grid.Column="1"
                                    DisplayMemberBinding="{Binding Name}"
                                    IsEnabled="{Binding SelectedState.IsEditable}"
                                    ItemsSource="{Binding Blackboard.Actions}"
                                    SelectedItem="{Binding SelectedState.ActionReference}" />

                                <!--  INPUT  -->
                                <Expander
                                    Grid.Row="1"
                                    Grid.ColumnSpan="2"
                                    Margin="0,5,0,0"
                                    Padding="0,5,0,0"
                                    VerticalAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    BorderBrush="{DynamicResource BackgroundBrush}"
                                    BorderThickness="0,0,0,1"
                                    FontWeight="Bold"
                                    Header="Input"
                                    IsExpanded="True"
                                    IsVisible="{Binding SelectedState.Action.Input.Count, Converter={shared:BooleanToVisibilityConverter}}">
                                    <Expander.Theme>
                                        <ControlTheme BasedOn="{StaticResource {x:Type Expander}}" TargetType="{x:Type Expander}">
                                            <Setter Property="Tag" Value="{StaticResource ExpandRightIcon}" />
                                            <Setter Property="(Interaction.Behaviors)">
                                                <BehaviorCollectionTemplate>
                                                    <BehaviorCollection>
                                                        <DataTrigger
                                                            UseDataContext="False"
                                                            Property="IsExpanded"
                                                            Value="True">
                                                            <PropertySetter Property="Tag" Value="{StaticResource ExpandDownIcon}" />
                                                        </DataTrigger>
                                                    </BehaviorCollection>
                                                </BehaviorCollectionTemplate>
                                            </Setter>
                                        </ControlTheme>
                                    </Expander.Theme>
                                    <ItemsControl FontWeight="Normal" ItemsSource="{Binding SelectedState.Action.Input}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="{x:Type local:BlackboardKeyViewModel}">
                                                <local:BlackboardKeyEditorView Margin="0,0,0,2">
                                                    <local:BlackboardKeyEditorView.DataContext>
                                                        <MultiBinding Converter="{local:BlackboardKeyEditorConverter CanChangeInputType=True}">
                                                            <Binding Path="DataContext.Keys" Source="{StaticResource BlackboardProxy}" />
                                                            <Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}" /> 
                                                            <!--  BindsDirectlyToSource="True"  -->
                                                        </MultiBinding>
                                                    </local:BlackboardKeyEditorView.DataContext>
                                                </local:BlackboardKeyEditorView>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Expander>

                                <!--  OUTPUT  -->
                                <Expander
                                    Grid.Row="2"
                                    Grid.ColumnSpan="2"
                                    Margin="0,5,0,0"
                                    Padding="0,5,0,0"
                                    BorderBrush="{DynamicResource BackgroundBrush}"
                                    BorderThickness="0,0,0,1"
                                    FontWeight="Bold"
                                    Header="Output"
                                    IsExpanded="True"
                                    IsVisible="{Binding SelectedState.Action.Output.Count, Converter={shared:BooleanToVisibilityConverter}}">
                                    <Expander.Theme>
                                        <ControlTheme BasedOn="{StaticResource {x:Type Expander}}" TargetType="{x:Type Expander}">
                                            <Setter Property="Tag" Value="{StaticResource ExpandRightIcon}" />
                                            <Setter Property="(Interaction.Behaviors)">
                                                <BehaviorCollectionTemplate>
                                                    <BehaviorCollection>
                                                        <DataTrigger
                                                            UseDataContext="False"
                                                            Property="IsExpanded"
                                                            Value="True">
                                                            <PropertySetter Property="Tag" Value="{StaticResource ExpandDownIcon}" />
                                                        </DataTrigger>
                                                    </BehaviorCollection>
                                                </BehaviorCollectionTemplate>
                                            </Setter>
                                        </ControlTheme>
                                    </Expander.Theme>
                                    <ItemsControl FontWeight="Normal" ItemsSource="{Binding SelectedState.Action.Output}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="{x:Type local:BlackboardKeyViewModel}">
                                                <local:BlackboardKeyEditorView Margin="0,0,0,2">
                                                    <local:BlackboardKeyEditorView.DataContext>
                                                        <MultiBinding Converter="{local:BlackboardKeyEditorConverter CanChangeInputType=False}">
                                                            <Binding Path="DataContext.Keys" Source="{StaticResource BlackboardProxy}" />
                                                            <Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}" /> 
                                                            <!--  BindsDirectlyToSource="True"  -->
                                                        </MultiBinding>
                                                    </local:BlackboardKeyEditorView.DataContext>
                                                </local:BlackboardKeyEditorView>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Expander>
                            </Grid>
                        </ScrollViewer>
                    </Grid>

                    <!--  BLACKBOARD  -->
                    <Grid IsSharedSizeScope="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <shared:EditableTextBlock
                                FontSize="16"
                                FontWeight="Bold"
                                Foreground="{DynamicResource ForegroundBrush}"
                                IsEditing="{Binding IsChecked, ElementName=EditName}"
                                MaxLength="20"
                                Text="{Binding Name}" />

                            <StackPanel Grid.Column="1" Orientation="Horizontal">
                                <CheckBox
                                    x:Name="EditName"
                                    Content="{StaticResource EditIcon}"
                                    Theme="{StaticResource IconCheckBox}"
                                    ToolTip.Tip="Edit Name" />
                                <Button
                                    Command="{Binding Blackboard.AddKeyCommand}"
                                    Content="{StaticResource AddKeyIcon}"
                                    Theme="{StaticResource IconButton}"
                                    ToolTip.Tip="Add New Key" />
                            </StackPanel>
                        </Grid>

                        <Separator
                            Grid.Row="1"
                            Height="2"
                            Margin="0,2,0,10" />

                        <ScrollViewer
                            Grid.Row="2"
                            HorizontalScrollBarVisibility="Auto"
                            VerticalScrollBarVisibility="Auto">
                            <ItemsControl ItemsSource="{Binding Blackboard.Keys}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type local:BlackboardKeyViewModel}">
                                        <Grid Margin="0,0,0,2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition SharedSizeGroup="Actions" />
                                            </Grid.ColumnDefinitions>

                                            <local:BlackboardKeyEditorView>
                                                <local:BlackboardKeyEditorView.DataContext>
                                                    <MultiBinding Converter="{local:BlackboardKeyEditorConverter CanChangeInputType=False}">
                                                        <Binding Path="DataContext.Keys" Source="{StaticResource BlackboardProxy}" />
                                                        <Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}" /> 
                                                        <!--  BindsDirectlyToSource="True"  -->
                                                        <Binding ElementName="EditKeyName" Path="IsChecked" />
                                                    </MultiBinding>
                                                </local:BlackboardKeyEditorView.DataContext>
                                            </local:BlackboardKeyEditorView>

                                            <StackPanel Grid.Column="3" Orientation="Horizontal">
                                                <CheckBox
                                                    x:Name="EditKeyName"
                                                    Content="{StaticResource EditIcon}"
                                                    Theme="{StaticResource IconCheckBox}"
                                                    ToolTip.Tip="Edit Name" />
                                                <Button
                                                    Command="{Binding DataContext.Blackboard.RemoveKeyCommand, Source={StaticResource EditorProxy}}"
                                                    CommandParameter="{Binding}"
                                                    Content="{StaticResource RemoveKeyIcon}"
                                                    Theme="{StaticResource IconButton}" />
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </Grid>
                </Grid>
            </Border>
        </Expander>
    </Grid>
</Window>
